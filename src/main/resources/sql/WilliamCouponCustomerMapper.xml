<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.william.mall_server.mapper.WilliamCouponCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.william.pojo.WilliamCouponCustomer" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="coupon_id" property="couponId" jdbcType="BIGINT" />
    <result column="coupon_count" property="couponCount" jdbcType="INTEGER" />
    <result column="coupon_value" property="couponValue" jdbcType="DECIMAL" />
    <result column="member_id" property="memberId" jdbcType="CHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="get_type" property="getType" jdbcType="INTEGER" />
    <result column="get_time" property="getTime" jdbcType="TIMESTAMP" />
    <result column="use_status" property="useStatus" jdbcType="INTEGER" />
    <result column="use_time" property="useTime" jdbcType="TIMESTAMP" />
    <result column="order_id" property="orderId" jdbcType="CHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    william_coupon_customer.id as id, william_coupon_customer.coupon_id as coupon_id, 
    william_coupon_customer.coupon_count as coupon_count, william_coupon_customer.coupon_value as coupon_value, 
    william_coupon_customer.member_id as member_id, william_coupon_customer.member_name as member_name, 
    william_coupon_customer.get_type as get_type, william_coupon_customer.get_time as get_time, 
    william_coupon_customer.use_status as use_status, william_coupon_customer.use_time as use_time, 
    william_coupon_customer.order_id as order_id, william_coupon_customer.remark as remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.william.pojo.WilliamCouponCustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from william_coupon_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from william_coupon_customer
    where william_coupon_customer.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from william_coupon_customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.william.pojo.WilliamCouponCustomerExample" >
    delete from william_coupon_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.william.pojo.WilliamCouponCustomer" >
    insert into william_coupon_customer (id, coupon_id, coupon_count, 
      coupon_value, member_id, member_name, 
      get_type, get_time, use_status, 
      use_time, order_id, remark
      )
    values (#{id,jdbcType=BIGINT}, #{couponId,jdbcType=BIGINT}, #{couponCount,jdbcType=INTEGER}, 
      #{couponValue,jdbcType=DECIMAL}, #{memberId,jdbcType=CHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{getType,jdbcType=INTEGER}, #{getTime,jdbcType=TIMESTAMP}, #{useStatus,jdbcType=INTEGER}, 
      #{useTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.william.pojo.WilliamCouponCustomer" >
    insert into william_coupon_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="couponCount != null" >
        coupon_count,
      </if>
      <if test="couponValue != null" >
        coupon_value,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="getType != null" >
        get_type,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="useStatus != null" >
        use_status,
      </if>
      <if test="useTime != null" >
        use_time,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponCount != null" >
        #{couponCount,jdbcType=INTEGER},
      </if>
      <if test="couponValue != null" >
        #{couponValue,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=CHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="getType != null" >
        #{getType,jdbcType=INTEGER},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useStatus != null" >
        #{useStatus,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.william.pojo.WilliamCouponCustomerExample" resultType="java.lang.Integer" >
    select count(*) from william_coupon_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update william_coupon_customer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.couponCount != null" >
        coupon_count = #{record.couponCount,jdbcType=INTEGER},
      </if>
      <if test="record.couponValue != null" >
        coupon_value = #{record.couponValue,jdbcType=DECIMAL},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=CHAR},
      </if>
      <if test="record.memberName != null" >
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.getType != null" >
        get_type = #{record.getType,jdbcType=INTEGER},
      </if>
      <if test="record.getTime != null" >
        get_time = #{record.getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useStatus != null" >
        use_status = #{record.useStatus,jdbcType=INTEGER},
      </if>
      <if test="record.useTime != null" >
        use_time = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update william_coupon_customer
    set id = #{record.id,jdbcType=BIGINT},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      coupon_count = #{record.couponCount,jdbcType=INTEGER},
      coupon_value = #{record.couponValue,jdbcType=DECIMAL},
      member_id = #{record.memberId,jdbcType=CHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      get_type = #{record.getType,jdbcType=INTEGER},
      get_time = #{record.getTime,jdbcType=TIMESTAMP},
      use_status = #{record.useStatus,jdbcType=INTEGER},
      use_time = #{record.useTime,jdbcType=TIMESTAMP},
      order_id = #{record.orderId,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.william.pojo.WilliamCouponCustomer" >
    update william_coupon_customer
    <set >
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponCount != null" >
        coupon_count = #{couponCount,jdbcType=INTEGER},
      </if>
      <if test="couponValue != null" >
        coupon_value = #{couponValue,jdbcType=DECIMAL},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=CHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="getType != null" >
        get_type = #{getType,jdbcType=INTEGER},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useStatus != null" >
        use_status = #{useStatus,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        use_time = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.william.pojo.WilliamCouponCustomer" >
    update william_coupon_customer
    set coupon_id = #{couponId,jdbcType=BIGINT},
      coupon_count = #{couponCount,jdbcType=INTEGER},
      coupon_value = #{couponValue,jdbcType=DECIMAL},
      member_id = #{memberId,jdbcType=CHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      get_type = #{getType,jdbcType=INTEGER},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      use_status = #{useStatus,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectPage" resultMap="BaseResultMap" parameterType="com.william.pojo.WilliamCouponCustomerExample" >
    select 
<if test="distinct" > 
distinct 
</if> 
<include refid="Base_Column_List" /> 
from william_coupon_customer
<if test="_parameter != null" > 
<include refid="Example_Where_Clause" /> 
</if> 
<if test="orderByClause != null" > 
order by ${orderByClause} 
</if> 
limit #{pageSize} offset #{startPos} 

  </select>

  <select id="getCouponByType" resultType="com.william.pojo.resp.CustomerCouponListResp">
      select
      william_coupon.name as name,
      william_coupon.image as image,
      william_coupon.use_type as useType,
      william_coupon.use_level as useLevel,
      william_coupon.coupon_type_value as couponTypeValue,
      william_coupon.per_limit as perLimit,
      william_coupon.residue_count as residueCount,
      date_format(william_coupon.expiry_start_time,'%Y-%m-%d') as expiryStartTime,
      date_format(william_coupon.expiry_end_time,'%Y-%m-%d') as expiryEndTime,
      william_coupon_customer.coupon_count as couponCount,
      date_format(william_coupon_customer.use_time ,'%Y-%m-%d') as useTime
      from william_coupon_customer
      inner join william_coupon on william_coupon_customer.coupon_id = william_coupon.id
      where
      william_coupon_customer.member_id = #{uid}
      and william_coupon_customer.use_status = #{type}
      order by william_coupon_customer.id desc
  </select>
</mapper>