<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.william.mall_server.mapper.WilliamOrderMapper" >
  <resultMap id="BaseResultMap" type="com.william.pojo.WilliamOrder" >
    <id column="order_id" property="orderId" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="after_status" property="afterStatus" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="product_amount_total" property="productAmountTotal" jdbcType="DECIMAL" />
    <result column="coupon_id" property="couponId" jdbcType="CHAR" />
    <result column="coupon_value" property="couponValue" jdbcType="INTEGER" />
    <result column="order_amount_total" property="orderAmountTotal" jdbcType="DECIMAL" />
    <result column="logistics_fee" property="logisticsFee" jdbcType="DECIMAL" />
    <result column="logistics_type" property="logisticsType" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="CHAR" />
    <result column="pay_channel" property="payChannel" jdbcType="CHAR" />
    <result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="escrow_trade_no" property="escrowTradeNo" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="order_create_id" property="orderCreateId" jdbcType="CHAR" />
    <result column="order_create_time" property="orderCreateTime" jdbcType="TIMESTAMP" />
    <result column="tenant_id" property="tenantId" jdbcType="CHAR" />
    <result column="client" property="client" jdbcType="CHAR" />
    <result column="operate_permission" property="operatePermission" jdbcType="VARCHAR" />
    <result column="mod_id" property="modId" jdbcType="CHAR" />
    <result column="mod_time" property="modTime" jdbcType="TIMESTAMP" />
    <result column="delete_id" property="deleteId" jdbcType="CHAR" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    william_order.order_id as order_id, william_order.order_status as order_status, william_order.after_status as after_status,
    william_order.product_count as product_count, william_order.product_amount_total as product_amount_total,
    william_order.coupon_id as coupon_id, william_order.coupon_value as coupon_value,
    william_order.order_amount_total as order_amount_total, william_order.logistics_fee as logistics_fee,
    william_order.logistics_type as logistics_type, william_order.address_id as address_id,
    william_order.pay_channel as pay_channel, william_order.out_trade_no as out_trade_no,
    william_order.escrow_trade_no as escrow_trade_no, william_order.order_type as order_type,
    william_order.order_create_id as order_create_id, william_order.order_create_time as order_create_time,
    william_order.tenant_id as tenant_id, william_order.client as client, william_order.operate_permission as operate_permission,
    william_order.mod_id as mod_id, william_order.mod_time as mod_time, william_order.delete_id as delete_id,
    william_order.delete_time as delete_time, william_order.status as status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.william.pojo.WilliamOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from william_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from william_order
    where william_order.order_id = #{orderId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from william_order
    where order_id = #{orderId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.william.pojo.WilliamOrderExample" >
    delete from william_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.william.pojo.WilliamOrder" >
    insert into william_order (order_id, order_status, after_status,
    product_count, product_amount_total, coupon_id,
    coupon_value, order_amount_total, logistics_fee,
    logistics_type, address_id, pay_channel,
    out_trade_no, escrow_trade_no, order_type,
    order_create_id, order_create_time, tenant_id,
    client, operate_permission, mod_id,
    mod_time, delete_id, delete_time,
    status)
    values (#{orderId,jdbcType=CHAR}, #{orderStatus,jdbcType=INTEGER}, #{afterStatus,jdbcType=INTEGER},
    #{productCount,jdbcType=INTEGER}, #{productAmountTotal,jdbcType=DECIMAL}, #{couponId,jdbcType=CHAR},
    #{couponValue,jdbcType=INTEGER}, #{orderAmountTotal,jdbcType=DECIMAL}, #{logisticsFee,jdbcType=DECIMAL},
    #{logisticsType,jdbcType=INTEGER}, #{addressId,jdbcType=CHAR}, #{payChannel,jdbcType=CHAR},
    #{outTradeNo,jdbcType=VARCHAR}, #{escrowTradeNo,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER},
    #{orderCreateId,jdbcType=CHAR}, #{orderCreateTime,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=CHAR},
    #{client,jdbcType=CHAR}, #{operatePermission,jdbcType=VARCHAR}, #{modId,jdbcType=CHAR},
    #{modTime,jdbcType=TIMESTAMP}, #{deleteId,jdbcType=CHAR}, #{deleteTime,jdbcType=TIMESTAMP},
    #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.william.pojo.WilliamOrder" >
    insert into william_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="afterStatus != null" >
        after_status,
      </if>
      <if test="productCount != null" >
        product_count,
      </if>
      <if test="productAmountTotal != null" >
        product_amount_total,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="couponValue != null" >
        coupon_value,
      </if>
      <if test="orderAmountTotal != null" >
        order_amount_total,
      </if>
      <if test="logisticsFee != null" >
        logistics_fee,
      </if>
      <if test="logisticsType != null" >
        logistics_type,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="payChannel != null" >
        pay_channel,
      </if>
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="escrowTradeNo != null" >
        escrow_trade_no,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="orderCreateId != null" >
        order_create_id,
      </if>
      <if test="orderCreateTime != null" >
        order_create_time,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="client != null" >
        client,
      </if>
      <if test="operatePermission != null" >
        operate_permission,
      </if>
      <if test="modId != null" >
        mod_id,
      </if>
      <if test="modTime != null" >
        mod_time,
      </if>
      <if test="deleteId != null" >
        delete_id,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="afterStatus != null" >
        #{afterStatus,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="productAmountTotal != null" >
        #{productAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=CHAR},
      </if>
      <if test="couponValue != null" >
        #{couponValue,jdbcType=INTEGER},
      </if>
      <if test="orderAmountTotal != null" >
        #{orderAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="logisticsFee != null" >
        #{logisticsFee,jdbcType=DECIMAL},
      </if>
      <if test="logisticsType != null" >
        #{logisticsType,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=CHAR},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=CHAR},
      </if>
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="escrowTradeNo != null" >
        #{escrowTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderCreateId != null" >
        #{orderCreateId,jdbcType=CHAR},
      </if>
      <if test="orderCreateTime != null" >
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=CHAR},
      </if>
      <if test="client != null" >
        #{client,jdbcType=CHAR},
      </if>
      <if test="operatePermission != null" >
        #{operatePermission,jdbcType=VARCHAR},
      </if>
      <if test="modId != null" >
        #{modId,jdbcType=CHAR},
      </if>
      <if test="modTime != null" >
        #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteId != null" >
        #{deleteId,jdbcType=CHAR},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.william.pojo.WilliamOrderExample" resultType="java.lang.Integer" >
    select count(*) from william_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update william_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.afterStatus != null" >
        after_status = #{record.afterStatus,jdbcType=INTEGER},
      </if>
      <if test="record.productCount != null" >
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.productAmountTotal != null" >
        product_amount_total = #{record.productAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=CHAR},
      </if>
      <if test="record.couponValue != null" >
        coupon_value = #{record.couponValue,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmountTotal != null" >
        order_amount_total = #{record.orderAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.logisticsFee != null" >
        logistics_fee = #{record.logisticsFee,jdbcType=DECIMAL},
      </if>
      <if test="record.logisticsType != null" >
        logistics_type = #{record.logisticsType,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=CHAR},
      </if>
      <if test="record.payChannel != null" >
        pay_channel = #{record.payChannel,jdbcType=CHAR},
      </if>
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.escrowTradeNo != null" >
        escrow_trade_no = #{record.escrowTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.orderCreateId != null" >
        order_create_id = #{record.orderCreateId,jdbcType=CHAR},
      </if>
      <if test="record.orderCreateTime != null" >
        order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=CHAR},
      </if>
      <if test="record.client != null" >
        client = #{record.client,jdbcType=CHAR},
      </if>
      <if test="record.operatePermission != null" >
        operate_permission = #{record.operatePermission,jdbcType=VARCHAR},
      </if>
      <if test="record.modId != null" >
        mod_id = #{record.modId,jdbcType=CHAR},
      </if>
      <if test="record.modTime != null" >
        mod_time = #{record.modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteId != null" >
        delete_id = #{record.deleteId,jdbcType=CHAR},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update william_order
    set order_id = #{record.orderId,jdbcType=CHAR},
    order_status = #{record.orderStatus,jdbcType=INTEGER},
    after_status = #{record.afterStatus,jdbcType=INTEGER},
    product_count = #{record.productCount,jdbcType=INTEGER},
    product_amount_total = #{record.productAmountTotal,jdbcType=DECIMAL},
    coupon_id = #{record.couponId,jdbcType=CHAR},
    coupon_value = #{record.couponValue,jdbcType=INTEGER},
    order_amount_total = #{record.orderAmountTotal,jdbcType=DECIMAL},
    logistics_fee = #{record.logisticsFee,jdbcType=DECIMAL},
    logistics_type = #{record.logisticsType,jdbcType=INTEGER},
    address_id = #{record.addressId,jdbcType=CHAR},
    pay_channel = #{record.payChannel,jdbcType=CHAR},
    out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
    escrow_trade_no = #{record.escrowTradeNo,jdbcType=VARCHAR},
    order_type = #{record.orderType,jdbcType=INTEGER},
    order_create_id = #{record.orderCreateId,jdbcType=CHAR},
    order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
    tenant_id = #{record.tenantId,jdbcType=CHAR},
    client = #{record.client,jdbcType=CHAR},
    operate_permission = #{record.operatePermission,jdbcType=VARCHAR},
    mod_id = #{record.modId,jdbcType=CHAR},
    mod_time = #{record.modTime,jdbcType=TIMESTAMP},
    delete_id = #{record.deleteId,jdbcType=CHAR},
    delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
    status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.william.pojo.WilliamOrder" >
    update william_order
    <set >
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="afterStatus != null" >
        after_status = #{afterStatus,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="productAmountTotal != null" >
        product_amount_total = #{productAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=CHAR},
      </if>
      <if test="couponValue != null" >
        coupon_value = #{couponValue,jdbcType=INTEGER},
      </if>
      <if test="orderAmountTotal != null" >
        order_amount_total = #{orderAmountTotal,jdbcType=DECIMAL},
      </if>
      <if test="logisticsFee != null" >
        logistics_fee = #{logisticsFee,jdbcType=DECIMAL},
      </if>
      <if test="logisticsType != null" >
        logistics_type = #{logisticsType,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=CHAR},
      </if>
      <if test="payChannel != null" >
        pay_channel = #{payChannel,jdbcType=CHAR},
      </if>
      <if test="outTradeNo != null" >
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="escrowTradeNo != null" >
        escrow_trade_no = #{escrowTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="orderCreateId != null" >
        order_create_id = #{orderCreateId,jdbcType=CHAR},
      </if>
      <if test="orderCreateTime != null" >
        order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=CHAR},
      </if>
      <if test="client != null" >
        client = #{client,jdbcType=CHAR},
      </if>
      <if test="operatePermission != null" >
        operate_permission = #{operatePermission,jdbcType=VARCHAR},
      </if>
      <if test="modId != null" >
        mod_id = #{modId,jdbcType=CHAR},
      </if>
      <if test="modTime != null" >
        mod_time = #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteId != null" >
        delete_id = #{deleteId,jdbcType=CHAR},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.william.pojo.WilliamOrder" >
    update william_order
    set order_status = #{orderStatus,jdbcType=INTEGER},
    after_status = #{afterStatus,jdbcType=INTEGER},
    product_count = #{productCount,jdbcType=INTEGER},
    product_amount_total = #{productAmountTotal,jdbcType=DECIMAL},
    coupon_id = #{couponId,jdbcType=CHAR},
    coupon_value = #{couponValue,jdbcType=INTEGER},
    order_amount_total = #{orderAmountTotal,jdbcType=DECIMAL},
    logistics_fee = #{logisticsFee,jdbcType=DECIMAL},
    logistics_type = #{logisticsType,jdbcType=INTEGER},
    address_id = #{addressId,jdbcType=CHAR},
    pay_channel = #{payChannel,jdbcType=CHAR},
    out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
    escrow_trade_no = #{escrowTradeNo,jdbcType=VARCHAR},
    order_type = #{orderType,jdbcType=INTEGER},
    order_create_id = #{orderCreateId,jdbcType=CHAR},
    order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
    tenant_id = #{tenantId,jdbcType=CHAR},
    client = #{client,jdbcType=CHAR},
    operate_permission = #{operatePermission,jdbcType=VARCHAR},
    mod_id = #{modId,jdbcType=CHAR},
    mod_time = #{modTime,jdbcType=TIMESTAMP},
    delete_id = #{deleteId,jdbcType=CHAR},
    delete_time = #{deleteTime,jdbcType=TIMESTAMP},
    status = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
  <select id="selectPage" resultMap="BaseResultMap" parameterType="com.william.pojo.WilliamOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from william_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit #{pageSize} offset #{startPos}

  </select>

  <!-- 订单列表 带商品 -->
  <resultMap id="OrderListByStatus" type="com.william.pojo.resp.OrderResp">
    <id column="order_id" property="orderId" jdbcType="CHAR"/>
    <result column="order_status" property="orderStatus" jdbcType="INTEGER"/>
    <result column="product_count" property="productCount" jdbcType="INTEGER"/>
    <result column="order_amount_total" property="orderAmountTotal" jdbcType="DECIMAL"/>
    <result column="order_create_time" property="orderCreateTime" jdbcType="TIMESTAMP"/>
    <collection property="orderGoodsList" ofType="com.william.pojo.WilliamOrderGoods">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="user_id" property="userId" jdbcType="CHAR" />
      <result column="order_id" property="orderId" jdbcType="CHAR" />
      <result column="goods_id" property="goodsId" jdbcType="CHAR" />
      <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
      <result column="goods_image" property="goodsImage" jdbcType="VARCHAR" />
      <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
      <result column="quantity" property="quantity" jdbcType="INTEGER" />
      <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </collection>
  </resultMap>

  <select id="getOrderListByStatus" resultMap="OrderListByStatus">
       select
       william_order.*,
       william_order_goods.*
       from william_order
       inner join william_order_goods on william_order_goods.order_id = william_order.order_id
       where 1=1
       and william_order.order_create_id = #{uid}
       <if test="orderStatus != 0">
          and order_status = #{orderStatus}
       </if>
       and william_order.tenant_id = #{tenantId}
       and william_order.client = #{client}
       and william_order.status = 1
       order by william_order.order_id desc
  </select>
</mapper>